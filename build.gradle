//file:noinspection GroovyAccessibility
plugins {
    id 'fabric-loom' version '1.1-SNAPSHOT'
    id 'maven-publish'
    id "io.freefair.lombok" version "6.6.2"
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

version = project.mod_version
group = project.maven_group

configurations {
    implementation.extendsFrom(api)
    shadow.extendsFrom(api)
}

repositories {
    mavenCentral()

    maven { url 'https://jitpack.io' }

    maven {
        url "https://cursemaven.com"
    }
}

dependencies {
    // Minecraft
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings loom.officialMojangMappings()

    // Fabric
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Mods
    modImplementation "curse.maven:litematica-${project.litematica_id}:${project.litematica_version}"

    // Discord SDk
    // shadow "com.github.JnCrMx:discord-game-sdk4j:${project.discord_sdk}"

    // ImGui
    shadow "io.github.spair:imgui-java-binding:${project.imgui_version}"
    shadow "io.github.spair:imgui-java-lwjgl3:${project.imgui_version}"
    shadow "io.github.spair:imgui-java-natives-windows-ft:${project.imgui_version}"
    shadow "io.github.spair:imgui-java-natives-linux:${project.imgui_version}"
    shadow "io.github.spair:imgui-java-natives-macos:${project.imgui_version}"
}

loom {
    accessWidenerPath = file("src/main/resources/cunny.accesswidener")
}

shadowJar {
    configurations = [project.configurations.shadow]
}

processResources {
    inputs.property "version", project.version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

def targetJavaVersion = 17
tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release = targetJavaVersion as Integer
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)

    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }

    archivesBaseName = project.archives_base_name

    withSourcesJar()
}

remapJar {
    dependsOn shadowJar
    inputFile.set(shadowJar.archiveFile)
}

