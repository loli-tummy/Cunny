package pictures.cunny.client.impl.modules.exploits;

import net.minecraft.network.protocol.game.ClientboundOpenScreenPacket;
import net.minecraft.network.protocol.game.ServerboundContainerClosePacket;
import net.minecraft.world.inventory.MenuType;
import pictures.cunny.client.framework.events.EventListener;
import pictures.cunny.client.framework.modules.Categories;
import pictures.cunny.client.framework.modules.Module;
import pictures.cunny.client.framework.modules.settings.BoolSetting;
import pictures.cunny.client.framework.modules.settings.IntSetting;
import pictures.cunny.client.impl.events.game.PacketEvent;
import pictures.cunny.client.impl.events.game.TickEvent;
import pictures.cunny.client.utility.PacketUtils;

public class FakeDDOS extends Module {
    public final BoolSetting shouldClose = new BoolSetting.Builder()
            .name("should-close")
            .description("Whether or not to close the screen.")
            .defaultTo(true)
            .addTo(coreGroup);
    public final IntSetting iterations = new IntSetting.Builder()
            .name("iterations")
            .description("How many iterations to run.")
            .defaultTo(1)
            .range(1, 20)
            .addTo(coreGroup);
    public final IntSetting openLimit = new IntSetting.Builder()
            .name("limit")
            .description("The max limit to open per iteration.")
            .defaultTo(1)
            .range(1, 4)
            .addTo(coreGroup);
    public final IntSetting tickDelay = new IntSetting.Builder()
            .name("delay")
            .description("The delay per opening in ticks")
            .defaultTo(1)
            .range(0, 40)
            .addTo(coreGroup);

    public FakeDDOS() {
        super(Categories.EXPLOITS, "Fake-DDOS", "Helps simulate the effects of a DDOS attack.");
    }

    @EventListener
    public void onPacket(PacketEvent.Received event) {
        if (event.packet instanceof ClientboundOpenScreenPacket packet) {
            if (packet.getType() == MenuType.GENERIC_9x3) {
                assert mc.player != null;
                if (shouldClose.value().get())
                    PacketUtils.send(new ServerboundContainerClosePacket(packet.getContainerId()));
                mc.player.clientSideCloseContainer();
                event.cancel();
            }
        }
    }

    @EventListener
    public void onTick(TickEvent.Pre event) {

    }
}
